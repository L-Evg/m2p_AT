<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.13</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.m2p.at</groupId>
	<artifactId>ftbtests</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>FTB Tests</name>
	<description>Functional GUI and API based tests for FTB app.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<testng.version>7.7.0</testng.version>
		<selenium-java.version>4.10.0</selenium-java.version>
		<webdrivermanager.version>5.3.0</webdrivermanager.version>
		<rest-assured.version>5.3.0</rest-assured.version>

		<assertj-version>3.24.2</assertj-version>

		<allure.version>2.23.0</allure.version>
		<aspectj.version>1.9.19</aspectj.version>
		<jackson.version>2.14.2</jackson.version>

		<logback-classic.version>1.2.6</logback-classic.version>
		<!--<lombok.version>1.18.26</lombok.version>-->
		<modelmapper.version>3.1.1</modelmapper.version>
		<datafaker.version>2.0.1</datafaker.version>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
		<mysql-connector-java.version>8.0.28</mysql-connector-java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>

		<!-- DB assess -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- REST API testing related-->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<exclusions>
				<!-- https://github.com/rest-assured/rest-assured/issues/1612
                remove conflicting dependency because declared in 2 different versions (3 & 4) -->
				<exclusion>
					<groupId>org.apache.groovy</groupId>
					<artifactId>groovy-xml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>${rest-assured.version}</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>xml-path</artifactId>
			<version>${rest-assured.version}</version>
		</dependency>

		<!-- Pretty human-readable reports -->
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-testng</artifactId>
			<version>${allure.version}</version>
		</dependency>
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-rest-assured</artifactId>
			<version>${allure.version}</version>
			<exclusions>
				<exclusion>
					<groupId>io.rest-assured</groupId>
					<artifactId>rest-assured</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JSON related libraries-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!--https://www.baeldung.com/spring-rest-json-patch-->
		<dependency>
			<groupId>com.github.java-json-tools</groupId>
			<artifactId>json-patch</artifactId>
			<version>1.13</version>
		</dependency>
		<!--
Selenium WebDriver itself
-->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-java.version}</version>
		</dependency>

		<!--
        A special tool to download WebDriver needed in an "automatic" way.
        Basically you DO NOT NEED to download, install, setup it manually!
        Read more at https://bonigarcia.dev/webdrivermanager/
        -->
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>${webdrivermanager.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- TestNG - we use this Unit-testing framework to organize and structure the tests.
        And simplify test execution of course.
        -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Nice, flexible and powerful Asserts!-->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
		</dependency>

		<!-- A library to make Java nice and modern-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<!--<version>${lombok.version}</version>-->
			<optional>true</optional>
		</dependency>

		<!-- Entity to DTO and DTO to an entity-->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>${modelmapper.version}</version>
		</dependency>

		<!-- ... a modern fork of java-faker, built on Java 8, with up-to-date libraries and several newly added Fake Generators. -->
		<dependency>
			<groupId>net.datafaker</groupId>
			<artifactId>datafaker</artifactId>
			<version>${datafaker.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.0.0.RELEASE</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<argLine>
						-ea -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar" --add-opens java.base/java.util=ALL-UNNAMED
					</argLine>
					<systemPropertyVariables>
						<allure.results.directory>target/allure-results</allure.results.directory>
					</systemPropertyVariables>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-testng</artifactId>
						<version>${maven-surefire-plugin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<version>2.12.0</version>
				<configuration>
					<reportVersion>${allure.version}</reportVersion>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>show-profiles</id>
						<phase>compile</phase>
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.10.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<profiles>
		<profile>
			<!-- No tests-->
			<id>nt</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
		<profile>
			<!-- Local i.e. your personal settings. It could point to a local FTB instance or to your sandbox-->
			<id>lcl</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<activeSpringProfiles>lcl</activeSpringProfiles>
			</properties>
		</profile>
		<profile>
			<!-- Some remote env-->
			<id>remote</id>
			<properties>
				<activeSpringProfiles>remote</activeSpringProfiles>
			</properties>
		</profile>
	</profiles>
</project>
